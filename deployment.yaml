apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-service-k8s
spec:
  selector:
    matchLabels:
      app: backend-service-k8s
  replicas: 1
  template:
    metadata:
      labels:
        app: backend-service-k8s
    spec:
      containers:
        - name: backend-service-k8s
          image: gcr.io/scenic-rampart-456316-u1/management-app:latest
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "1"
          volumeMounts:
            - name: storage-volume
              mountPath: /app/storage
          ports:
            - containerPort: 8080
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: postgres-configmap
                  key: host
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: postgres-configmap
                  key: name
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: postgres_user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: postgres_password
      volumes:
        - name: storage-volume
          persistentVolumeClaim:
            claimName: my-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service-k8s
  labels:
    name: backend-service-k8s
spec:
  type: LoadBalancer  # Changed from NodePort to LoadBalancer
  selector:
    app: backend-service-k8s
  ports:
    - port: 443           # Port exposed by the service
      targetPort: 8080     # Port on the pod
      protocol: TCP